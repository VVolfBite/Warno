
# parsetab.py
# This file is automatically generated. Do not edit.
# pylint: disable=W,C,R
_tabversion = '3.10'

_lr_method = 'LALR'

_lr_signature = 'leftAMPERSANDAMPERSORleftEQUALSLEGELTGTNEleftPLUSMINUSleftTIMESDIVIDEMODULOrightUMINUSAMPERSAND AMPERSOR BOOLEAN COLON COMMA DIV DIVIDE DOLLAR DOT EQUALS EXPORT FALSE FLOAT GE GT HEX_NUMBER ID INT IS LANGLE LBRACE LBRACKET LE LPAREN LT MAP MINUS MODULO NE NIL NUMBER PLUS PRIVATE QUESTION RANGLE RBRACE RBRACKET RPAREN SLASH STR STRING TEMPLATE TILDE TIMES TRUE UNNAMEDprogram : statement_liststatement_list : statement\n                      | statement_list statementstatement : normal_definition\n                 | unnamed_definition\n                 | template_definitionnormal_definition : var IS expressionunnamed_definition : UNNAMED term_objecttemplate_definition : TEMPLATE term_template IS term_objectexpression : expression PLUS expression\n                  | expression MINUS expression\n                  | expression TIMES expression\n                  | expression DIVIDE expression\n                  | expression MODULO expression\n                  | expression EQUALS expression\n                  | expression LE expression\n                  | expression GE expression\n                  | expression LT expression\n                  | expression GT expression\n                  | expression NE expression\n                  | expression AMPERSAND expression\n                  | expression AMPERSOR expression\n                  | MINUS expression %prec UMINUS\n                  | termterm : NUMBER\n            | HEX_NUMBER\n            | FLOAT\n            | STR\n            | BOOLEAN\n            | term_vector\n            | term_pair\n            | term_map\n            | term_path\n            | term_object\n            | term_template\n            | varvar : IDterm_vector : LBRACKET RBRACKET\n                   | LBRACKET term_vector_content RBRACKETterm_vector_content : term COMMA\n                           | term_vector_content term COMMAterm_pair : LPAREN term COMMA term RPARENterm_map : MAP LBRACKET RBRACKET\n                | MAP LBRACKET term_map_content RBRACKETterm_map_content : term_pair COMMA\n                        | term_map_content term_pair COMMAtype : ID\n            | INT\n            | STRterm_object : type LPAREN member_list RPARENmember_list : member\n                   | member_list membermember : var EQUALS expression\n                | term_object\n    term_template : template_name LBRACKET para_list RBRACKETtemplate_name : IDpara_list : para\n                 | para_list COMMA parapara : var COLON type\n            | var COLON type EQUALS expressionterm_path : ID path_part\n                 | DOLLAR path_part\n                 | TILDE path_partpath_part : SLASH ID path_part\n            | SLASH ID\n            | SLASH'
    
_lr_action_items = {'UNNAMED':([0,2,3,4,5,6,11,13,21,22,24,25,26,27,28,29,30,31,32,33,34,35,39,58,59,64,65,66,67,73,77,78,79,80,81,82,83,84,85,86,87,88,89,90,94,97,98,101,106,109,113,],[8,8,-2,-4,-5,-6,-3,-8,-36,-7,-24,-25,-26,-27,-28,-29,-30,-31,-32,-33,-34,-35,-37,-23,-38,-61,-66,-62,-63,-9,-10,-11,-12,-13,-14,-15,-16,-17,-18,-19,-20,-21,-22,-39,-43,-65,-50,-55,-44,-64,-42,]),'TEMPLATE':([0,2,3,4,5,6,11,13,21,22,24,25,26,27,28,29,30,31,32,33,34,35,39,58,59,64,65,66,67,73,77,78,79,80,81,82,83,84,85,86,87,88,89,90,94,97,98,101,106,109,113,],[9,9,-2,-4,-5,-6,-3,-8,-36,-7,-24,-25,-26,-27,-28,-29,-30,-31,-32,-33,-34,-35,-37,-23,-38,-61,-66,-62,-63,-9,-10,-11,-12,-13,-14,-15,-16,-17,-18,-19,-20,-21,-22,-39,-43,-65,-50,-55,-44,-64,-42,]),'ID':([0,2,3,4,5,6,8,9,11,12,13,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,39,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,64,65,66,67,68,69,71,73,77,78,79,80,81,82,83,84,85,86,87,88,89,90,92,93,94,97,98,99,100,101,102,103,104,106,109,110,113,115,],[10,10,-2,-4,-5,-6,15,20,-3,39,-8,-36,-7,39,-24,-25,-26,-27,-28,-29,-30,-31,-32,-33,-34,-35,39,39,-37,72,15,10,39,39,39,39,39,39,39,39,39,39,39,39,39,-23,-38,39,-61,97,-62,-63,72,-51,-54,-9,-10,-11,-12,-13,-14,-15,-16,-17,-18,-19,-20,-21,-22,-39,-40,39,-43,-65,-50,-52,39,-55,10,15,-41,-44,-64,-53,-42,39,]),'$end':([1,2,3,4,5,6,11,13,21,22,24,25,26,27,28,29,30,31,32,33,34,35,39,58,59,64,65,66,67,73,77,78,79,80,81,82,83,84,85,86,87,88,89,90,94,97,98,101,106,109,113,],[0,-1,-2,-4,-5,-6,-3,-8,-36,-7,-24,-25,-26,-27,-28,-29,-30,-31,-32,-33,-34,-35,-37,-23,-38,-61,-66,-62,-63,-9,-10,-11,-12,-13,-14,-15,-16,-17,-18,-19,-20,-21,-22,-39,-43,-65,-50,-55,-44,-64,-42,]),'IS':([7,10,18,101,],[12,-37,43,-55,]),'INT':([8,12,21,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,39,42,43,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,64,65,66,67,68,69,71,77,78,79,80,81,82,83,84,85,86,87,88,89,90,92,93,94,97,98,99,100,101,103,104,106,109,110,113,115,],[16,16,-36,16,-24,-25,-26,-27,-28,-29,-30,-31,-32,-33,-34,-35,16,16,-37,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,-23,-38,16,-61,-66,-62,-63,16,-51,-54,-10,-11,-12,-13,-14,-15,-16,-17,-18,-19,-20,-21,-22,-39,-40,16,-43,-65,-50,-52,16,-55,16,-41,-44,-64,-53,-42,16,]),'STR':([8,12,21,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,39,42,43,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,64,65,66,67,68,69,71,77,78,79,80,81,82,83,84,85,86,87,88,89,90,92,93,94,97,98,99,100,101,103,104,106,109,110,113,115,],[17,28,-36,28,-24,-25,-26,-27,-28,-29,-30,-31,-32,-33,-34,-35,28,28,-37,17,17,28,28,28,28,28,28,28,28,28,28,28,28,28,-23,-38,28,-61,-66,-62,-63,17,-51,-54,-10,-11,-12,-13,-14,-15,-16,-17,-18,-19,-20,-21,-22,-39,-40,28,-43,-65,-50,-52,28,-55,17,-41,-44,-64,-53,-42,28,]),'COLON':([10,76,],[-37,103,]),'MINUS':([12,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,39,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,64,65,66,67,77,78,79,80,81,82,83,84,85,86,87,88,89,90,94,97,98,100,101,106,109,110,113,115,116,],[23,-36,46,23,-24,-25,-26,-27,-28,-29,-30,-31,-32,-33,-34,-35,-37,23,23,23,23,23,23,23,23,23,23,23,23,23,-23,-38,-61,-66,-62,-63,-10,-11,-12,-13,-14,46,46,46,46,46,46,46,46,-39,-43,-65,-50,23,-55,-44,-64,46,-42,23,46,]),'NUMBER':([12,23,36,37,45,46,47,48,49,50,51,52,53,54,55,56,57,60,92,93,100,104,115,],[25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,-40,25,25,-41,25,]),'HEX_NUMBER':([12,23,36,37,45,46,47,48,49,50,51,52,53,54,55,56,57,60,92,93,100,104,115,],[26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,-40,26,26,-41,26,]),'FLOAT':([12,23,36,37,45,46,47,48,49,50,51,52,53,54,55,56,57,60,92,93,100,104,115,],[27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,-40,27,27,-41,27,]),'BOOLEAN':([12,23,36,37,45,46,47,48,49,50,51,52,53,54,55,56,57,60,92,93,100,104,115,],[29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,-40,29,29,-41,29,]),'LBRACKET':([12,19,20,23,36,37,38,39,45,46,47,48,49,50,51,52,53,54,55,56,57,60,92,93,100,104,115,],[36,44,-56,36,36,36,63,-56,36,36,36,36,36,36,36,36,36,36,36,36,36,36,-40,36,36,-41,36,]),'LPAREN':([12,14,15,16,17,23,28,36,37,39,45,46,47,48,49,50,51,52,53,54,55,56,57,60,63,72,92,93,95,100,104,108,114,115,],[37,42,-47,-48,-49,37,-49,37,37,-47,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,-47,-40,37,37,37,-41,-45,-46,37,]),'MAP':([12,23,36,37,45,46,47,48,49,50,51,52,53,54,55,56,57,60,92,93,100,104,115,],[38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,-40,38,38,-41,38,]),'DOLLAR':([12,23,36,37,45,46,47,48,49,50,51,52,53,54,55,56,57,60,92,93,100,104,115,],[40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,-40,40,40,-41,40,]),'TILDE':([12,23,36,37,45,46,47,48,49,50,51,52,53,54,55,56,57,60,92,93,100,104,115,],[41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,-40,41,41,-41,41,]),'EQUALS':([15,16,17,21,22,24,25,26,27,28,29,30,31,32,33,34,35,39,58,59,64,65,66,67,70,72,77,78,79,80,81,82,83,84,85,86,87,88,89,90,94,97,98,101,106,109,110,112,113,116,],[-47,-48,-49,-36,50,-24,-25,-26,-27,-28,-29,-30,-31,-32,-33,-34,-35,-37,-23,-38,-61,-66,-62,-63,100,-37,-10,-11,-12,-13,-14,-15,-16,-17,-18,-19,-20,50,50,-39,-43,-65,-50,-55,-44,-64,50,115,-42,50,]),'RBRACKET':([15,16,17,21,24,25,26,27,28,29,30,31,32,33,34,35,36,39,58,59,60,63,64,65,66,67,74,75,77,78,79,80,81,82,83,84,85,86,87,88,89,90,92,94,95,97,98,101,104,106,108,109,111,112,113,114,116,],[-47,-48,-49,-36,-24,-25,-26,-27,-28,-29,-30,-31,-32,-33,-34,-35,59,-37,-23,-38,90,94,-61,-66,-62,-63,101,-57,-10,-11,-12,-13,-14,-15,-16,-17,-18,-19,-20,-21,-22,-39,-40,-43,106,-65,-50,-55,-41,-44,-45,-64,-58,-59,-42,-46,-60,]),'COMMA':([15,16,17,21,24,25,26,27,28,29,30,31,32,33,34,35,39,58,59,61,62,64,65,66,67,74,75,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,94,96,97,98,101,106,107,109,111,112,113,116,],[-47,-48,-49,-36,-24,-25,-26,-27,-28,-29,-30,-31,-32,-33,-34,-35,-37,-23,-38,92,93,-61,-66,-62,-63,102,-57,-10,-11,-12,-13,-14,-15,-16,-17,-18,-19,-20,-21,-22,-39,104,-43,108,-65,-50,-55,-44,114,-64,-58,-59,-42,-60,]),'PLUS':([21,22,24,25,26,27,28,29,30,31,32,33,34,35,39,58,59,64,65,66,67,77,78,79,80,81,82,83,84,85,86,87,88,89,90,94,97,98,101,106,109,110,113,116,],[-36,45,-24,-25,-26,-27,-28,-29,-30,-31,-32,-33,-34,-35,-37,-23,-38,-61,-66,-62,-63,-10,-11,-12,-13,-14,45,45,45,45,45,45,45,45,-39,-43,-65,-50,-55,-44,-64,45,-42,45,]),'TIMES':([21,22,24,25,26,27,28,29,30,31,32,33,34,35,39,58,59,64,65,66,67,77,78,79,80,81,82,83,84,85,86,87,88,89,90,94,97,98,101,106,109,110,113,116,],[-36,47,-24,-25,-26,-27,-28,-29,-30,-31,-32,-33,-34,-35,-37,-23,-38,-61,-66,-62,-63,47,47,-12,-13,-14,47,47,47,47,47,47,47,47,-39,-43,-65,-50,-55,-44,-64,47,-42,47,]),'DIVIDE':([21,22,24,25,26,27,28,29,30,31,32,33,34,35,39,58,59,64,65,66,67,77,78,79,80,81,82,83,84,85,86,87,88,89,90,94,97,98,101,106,109,110,113,116,],[-36,48,-24,-25,-26,-27,-28,-29,-30,-31,-32,-33,-34,-35,-37,-23,-38,-61,-66,-62,-63,48,48,-12,-13,-14,48,48,48,48,48,48,48,48,-39,-43,-65,-50,-55,-44,-64,48,-42,48,]),'MODULO':([21,22,24,25,26,27,28,29,30,31,32,33,34,35,39,58,59,64,65,66,67,77,78,79,80,81,82,83,84,85,86,87,88,89,90,94,97,98,101,106,109,110,113,116,],[-36,49,-24,-25,-26,-27,-28,-29,-30,-31,-32,-33,-34,-35,-37,-23,-38,-61,-66,-62,-63,49,49,-12,-13,-14,49,49,49,49,49,49,49,49,-39,-43,-65,-50,-55,-44,-64,49,-42,49,]),'LE':([21,22,24,25,26,27,28,29,30,31,32,33,34,35,39,58,59,64,65,66,67,77,78,79,80,81,82,83,84,85,86,87,88,89,90,94,97,98,101,106,109,110,113,116,],[-36,51,-24,-25,-26,-27,-28,-29,-30,-31,-32,-33,-34,-35,-37,-23,-38,-61,-66,-62,-63,-10,-11,-12,-13,-14,-15,-16,-17,-18,-19,-20,51,51,-39,-43,-65,-50,-55,-44,-64,51,-42,51,]),'GE':([21,22,24,25,26,27,28,29,30,31,32,33,34,35,39,58,59,64,65,66,67,77,78,79,80,81,82,83,84,85,86,87,88,89,90,94,97,98,101,106,109,110,113,116,],[-36,52,-24,-25,-26,-27,-28,-29,-30,-31,-32,-33,-34,-35,-37,-23,-38,-61,-66,-62,-63,-10,-11,-12,-13,-14,-15,-16,-17,-18,-19,-20,52,52,-39,-43,-65,-50,-55,-44,-64,52,-42,52,]),'LT':([21,22,24,25,26,27,28,29,30,31,32,33,34,35,39,58,59,64,65,66,67,77,78,79,80,81,82,83,84,85,86,87,88,89,90,94,97,98,101,106,109,110,113,116,],[-36,53,-24,-25,-26,-27,-28,-29,-30,-31,-32,-33,-34,-35,-37,-23,-38,-61,-66,-62,-63,-10,-11,-12,-13,-14,-15,-16,-17,-18,-19,-20,53,53,-39,-43,-65,-50,-55,-44,-64,53,-42,53,]),'GT':([21,22,24,25,26,27,28,29,30,31,32,33,34,35,39,58,59,64,65,66,67,77,78,79,80,81,82,83,84,85,86,87,88,89,90,94,97,98,101,106,109,110,113,116,],[-36,54,-24,-25,-26,-27,-28,-29,-30,-31,-32,-33,-34,-35,-37,-23,-38,-61,-66,-62,-63,-10,-11,-12,-13,-14,-15,-16,-17,-18,-19,-20,54,54,-39,-43,-65,-50,-55,-44,-64,54,-42,54,]),'NE':([21,22,24,25,26,27,28,29,30,31,32,33,34,35,39,58,59,64,65,66,67,77,78,79,80,81,82,83,84,85,86,87,88,89,90,94,97,98,101,106,109,110,113,116,],[-36,55,-24,-25,-26,-27,-28,-29,-30,-31,-32,-33,-34,-35,-37,-23,-38,-61,-66,-62,-63,-10,-11,-12,-13,-14,-15,-16,-17,-18,-19,-20,55,55,-39,-43,-65,-50,-55,-44,-64,55,-42,55,]),'AMPERSAND':([21,22,24,25,26,27,28,29,30,31,32,33,34,35,39,58,59,64,65,66,67,77,78,79,80,81,82,83,84,85,86,87,88,89,90,94,97,98,101,106,109,110,113,116,],[-36,56,-24,-25,-26,-27,-28,-29,-30,-31,-32,-33,-34,-35,-37,-23,-38,-61,-66,-62,-63,-10,-11,-12,-13,-14,-15,-16,-17,-18,-19,-20,-21,-22,-39,-43,-65,-50,-55,-44,-64,56,-42,56,]),'AMPERSOR':([21,22,24,25,26,27,28,29,30,31,32,33,34,35,39,58,59,64,65,66,67,77,78,79,80,81,82,83,84,85,86,87,88,89,90,94,97,98,101,106,109,110,113,116,],[-36,57,-24,-25,-26,-27,-28,-29,-30,-31,-32,-33,-34,-35,-37,-23,-38,-61,-66,-62,-63,-10,-11,-12,-13,-14,-15,-16,-17,-18,-19,-20,-21,-22,-39,-43,-65,-50,-55,-44,-64,57,-42,57,]),'RPAREN':([21,24,25,26,27,28,29,30,31,32,33,34,35,39,58,59,64,65,66,67,68,69,71,77,78,79,80,81,82,83,84,85,86,87,88,89,90,94,97,98,99,101,105,106,109,110,113,],[-36,-24,-25,-26,-27,-28,-29,-30,-31,-32,-33,-34,-35,-37,-23,-38,-61,-66,-62,-63,98,-51,-54,-10,-11,-12,-13,-14,-15,-16,-17,-18,-19,-20,-21,-22,-39,-43,-65,-50,-52,-55,113,-44,-64,-53,-42,]),'SLASH':([39,40,41,97,],[65,65,65,65,]),}

_lr_action = {}
for _k, _v in _lr_action_items.items():
   for _x,_y in zip(_v[0],_v[1]):
      if not _x in _lr_action:  _lr_action[_x] = {}
      _lr_action[_x][_k] = _y
del _lr_action_items

_lr_goto_items = {'program':([0,],[1,]),'statement_list':([0,],[2,]),'statement':([0,2,],[3,11,]),'normal_definition':([0,2,],[4,4,]),'unnamed_definition':([0,2,],[5,5,]),'template_definition':([0,2,],[6,6,]),'var':([0,2,12,23,36,37,42,44,45,46,47,48,49,50,51,52,53,54,55,56,57,60,68,93,100,102,115,],[7,7,21,21,21,21,70,76,21,21,21,21,21,21,21,21,21,21,21,21,21,21,70,21,21,76,21,]),'term_object':([8,12,23,36,37,42,43,45,46,47,48,49,50,51,52,53,54,55,56,57,60,68,93,100,115,],[13,34,34,34,34,71,73,34,34,34,34,34,34,34,34,34,34,34,34,34,34,71,34,34,34,]),'type':([8,12,23,36,37,42,43,45,46,47,48,49,50,51,52,53,54,55,56,57,60,68,93,100,103,115,],[14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,112,14,]),'term_template':([9,12,23,36,37,45,46,47,48,49,50,51,52,53,54,55,56,57,60,93,100,115,],[18,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,]),'template_name':([9,12,23,36,37,45,46,47,48,49,50,51,52,53,54,55,56,57,60,93,100,115,],[19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,]),'expression':([12,23,45,46,47,48,49,50,51,52,53,54,55,56,57,100,115,],[22,58,77,78,79,80,81,82,83,84,85,86,87,88,89,110,116,]),'term':([12,23,36,37,45,46,47,48,49,50,51,52,53,54,55,56,57,60,93,100,115,],[24,24,61,62,24,24,24,24,24,24,24,24,24,24,24,24,24,91,105,24,24,]),'term_vector':([12,23,36,37,45,46,47,48,49,50,51,52,53,54,55,56,57,60,93,100,115,],[30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,]),'term_pair':([12,23,36,37,45,46,47,48,49,50,51,52,53,54,55,56,57,60,63,93,95,100,115,],[31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,96,31,107,31,31,]),'term_map':([12,23,36,37,45,46,47,48,49,50,51,52,53,54,55,56,57,60,93,100,115,],[32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,]),'term_path':([12,23,36,37,45,46,47,48,49,50,51,52,53,54,55,56,57,60,93,100,115,],[33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,]),'term_vector_content':([36,],[60,]),'path_part':([39,40,41,97,],[64,66,67,109,]),'member_list':([42,],[68,]),'member':([42,68,],[69,99,]),'para_list':([44,],[74,]),'para':([44,102,],[75,111,]),'term_map_content':([63,],[95,]),}

_lr_goto = {}
for _k, _v in _lr_goto_items.items():
   for _x, _y in zip(_v[0], _v[1]):
       if not _x in _lr_goto: _lr_goto[_x] = {}
       _lr_goto[_x][_k] = _y
del _lr_goto_items
_lr_productions = [
  ("S' -> program","S'",1,None,None,None),
  ('program -> statement_list','program',1,'p_program','parser.py',33),
  ('statement_list -> statement','statement_list',1,'p_statement_list','parser.py',37),
  ('statement_list -> statement_list statement','statement_list',2,'p_statement_list','parser.py',38),
  ('statement -> normal_definition','statement',1,'p_statement','parser.py',45),
  ('statement -> unnamed_definition','statement',1,'p_statement','parser.py',46),
  ('statement -> template_definition','statement',1,'p_statement','parser.py',47),
  ('normal_definition -> var IS expression','normal_definition',3,'p_normal_definition','parser.py',52),
  ('unnamed_definition -> UNNAMED term_object','unnamed_definition',2,'p_unnamed_definition','parser.py',60),
  ('template_definition -> TEMPLATE term_template IS term_object','template_definition',4,'p_template_definition','parser.py',68),
  ('expression -> expression PLUS expression','expression',3,'p_expression','parser.py',77),
  ('expression -> expression MINUS expression','expression',3,'p_expression','parser.py',78),
  ('expression -> expression TIMES expression','expression',3,'p_expression','parser.py',79),
  ('expression -> expression DIVIDE expression','expression',3,'p_expression','parser.py',80),
  ('expression -> expression MODULO expression','expression',3,'p_expression','parser.py',81),
  ('expression -> expression EQUALS expression','expression',3,'p_expression','parser.py',82),
  ('expression -> expression LE expression','expression',3,'p_expression','parser.py',83),
  ('expression -> expression GE expression','expression',3,'p_expression','parser.py',84),
  ('expression -> expression LT expression','expression',3,'p_expression','parser.py',85),
  ('expression -> expression GT expression','expression',3,'p_expression','parser.py',86),
  ('expression -> expression NE expression','expression',3,'p_expression','parser.py',87),
  ('expression -> expression AMPERSAND expression','expression',3,'p_expression','parser.py',88),
  ('expression -> expression AMPERSOR expression','expression',3,'p_expression','parser.py',89),
  ('expression -> MINUS expression','expression',2,'p_expression','parser.py',90),
  ('expression -> term','expression',1,'p_expression','parser.py',91),
  ('term -> NUMBER','term',1,'p_term','parser.py',126),
  ('term -> HEX_NUMBER','term',1,'p_term','parser.py',127),
  ('term -> FLOAT','term',1,'p_term','parser.py',128),
  ('term -> STR','term',1,'p_term','parser.py',129),
  ('term -> BOOLEAN','term',1,'p_term','parser.py',130),
  ('term -> term_vector','term',1,'p_term','parser.py',131),
  ('term -> term_pair','term',1,'p_term','parser.py',132),
  ('term -> term_map','term',1,'p_term','parser.py',133),
  ('term -> term_path','term',1,'p_term','parser.py',134),
  ('term -> term_object','term',1,'p_term','parser.py',135),
  ('term -> term_template','term',1,'p_term','parser.py',136),
  ('term -> var','term',1,'p_term','parser.py',137),
  ('var -> ID','var',1,'p_var','parser.py',145),
  ('term_vector -> LBRACKET RBRACKET','term_vector',2,'p_term_vector','parser.py',149),
  ('term_vector -> LBRACKET term_vector_content RBRACKET','term_vector',3,'p_term_vector','parser.py',150),
  ('term_vector_content -> term COMMA','term_vector_content',2,'p_term_vector_content','parser.py',157),
  ('term_vector_content -> term_vector_content term COMMA','term_vector_content',3,'p_term_vector_content','parser.py',158),
  ('term_pair -> LPAREN term COMMA term RPAREN','term_pair',5,'p_term_pair','parser.py',167),
  ('term_map -> MAP LBRACKET RBRACKET','term_map',3,'p_term_map','parser.py',171),
  ('term_map -> MAP LBRACKET term_map_content RBRACKET','term_map',4,'p_term_map','parser.py',172),
  ('term_map_content -> term_pair COMMA','term_map_content',2,'p_term_map_content','parser.py',179),
  ('term_map_content -> term_map_content term_pair COMMA','term_map_content',3,'p_term_map_content','parser.py',180),
  ('type -> ID','type',1,'p_type','parser.py',187),
  ('type -> INT','type',1,'p_type','parser.py',188),
  ('type -> STR','type',1,'p_type','parser.py',189),
  ('term_object -> type LPAREN member_list RPAREN','term_object',4,'p_term_object','parser.py',193),
  ('member_list -> member','member_list',1,'p_member_list','parser.py',200),
  ('member_list -> member_list member','member_list',2,'p_member_list','parser.py',201),
  ('member -> var EQUALS expression','member',3,'p_member','parser.py',208),
  ('member -> term_object','member',1,'p_member','parser.py',209),
  ('term_template -> template_name LBRACKET para_list RBRACKET','term_template',4,'p_term_template','parser.py',223),
  ('template_name -> ID','template_name',1,'p_template_name','parser.py',230),
  ('para_list -> para','para_list',1,'p_para_list','parser.py',234),
  ('para_list -> para_list COMMA para','para_list',3,'p_para_list','parser.py',235),
  ('para -> var COLON type','para',3,'p_para','parser.py',242),
  ('para -> var COLON type EQUALS expression','para',5,'p_para','parser.py',243),
  ('term_path -> ID path_part','term_path',2,'p_term_path','parser.py',257),
  ('term_path -> DOLLAR path_part','term_path',2,'p_term_path','parser.py',258),
  ('term_path -> TILDE path_part','term_path',2,'p_term_path','parser.py',259),
  ('path_part -> SLASH ID path_part','path_part',3,'p_path_part','parser.py',263),
  ('path_part -> SLASH ID','path_part',2,'p_path_part','parser.py',264),
  ('path_part -> SLASH','path_part',1,'p_path_part','parser.py',265),
]
